#!/usr/bin/env bash

# This is the .envrc, for use with direnv.
# See quickstart at the end of this file.

# Don't keep secrets in tracked files.
chmod -w .envrc

## Strict mode
if ! has make; then
    printf "\a\e[1;31m\nmake required!\e[0m (sudo apt update && sudo apt install make)\n\n"
fi
strict_env has make
if ! has pyenv; then
    printf "\a\e[1;31m\npyenvv required!\e[0m (make install-pyenv)\n\n"
fi
strict_env has pyenv

PATH_add .

## Project
PROJECT_DIR="$(
    cd "$(dirname "${BASH_SOURCE[0]}")"
    pwd -P
)"
export PROJECT_DIR
PROJECT_NAME="$(basename "$PROJECT_DIR")"
export PROJECT_NAME
export WEBDRIVER_PATH=./parsers/utils/drivers
VENV="~/.pyenv/versions/.$PROJECT_NAME"
export VENV

## Project user_parsers
# For /parsers/user_parsers/merge_checker/constants.py
export GITHUB_TOKEN=REWRITE_ME_IN_UNTRACKED_ENVRC

## Python
PYTHONSTARTUP="$PROJECT_DIR"/.config/.pythonrc
export PYTHONSTARTUP
export PYTHONBREAKPOINT=snoop.snoop

## Aliases
export_alias g 'grep \
    --include=*.py \
    --include=.config/.vocabulary \
    --exclude=*.pyc \
    --exclude-dir=__pycache__ \
    --exclude-dir=.mypy_cache \
    --color=auto \
    --extended-regexp \
    --line-number \
    --recursive \
    $@'

## Display information
# Check if this file has modified
if ! git --no-pager diff --exit-code --no-patch .envrc; then
    echo -e "$(cat << EOF
\n$(git diff --shortstat .envrc)
\a\e[31m
    This file is a tracked.
\e[0m
\e[33m
    If you'd like to set or override any custom varibles, this .envrc will read
\e[0m
    .env, .env.private, .env.local, .envrc.private, .envrc.local \e[33mat the end.

    Keep your secrets there.
    If your changes are public, use 'git add --force .envrc'
    To discard changes in working directory, use 'git restore .envrc'
\e[0m
EOF
)"
    exit 1
else
    printf "\e[1;33m"; python3 -V; printf "\e[0m"
    printf "to set local Python3 use: 'pyenv local \`pyenv latest -k 3\`'\n"
    # if on_git_branch; then
    #     echo && git status --short --branch && git diff --stat && echo
    # fi
fi

# Each next file overwrites the variables of the previous one
[[ ! -f .env ]] || dotenv .env
[[ ! -f .env.private ]] || dotenv .env.private
[[ ! -f .env.local ]] || dotenv .env.local
source_env_if_exists .envrc.private
source_env_if_exists .envrc.local


## --------------------------------------
##           --- Howto ---
## checked in Ubuntu 22.04 --------------

## 1. Install direnv
# sudo apt-get update && sudo apt-get install direnv

## 2. Add direnv hook in ~/.bashrc
# eval "$(direnv hook bash)"

## 3. Make 'touch $HOME/.direnvrc' and add this snippet
# layout_virtualenv() {
#   local venv_path="$1"
#   source ${venv_path}/bin/activate
# }
# export_alias() {
#   local name=$1
#   shift
#   local alias_dir=$PWD/.direnv/aliases
#   local target="$alias_dir/$name"
#   mkdir -p "$alias_dir"
#   PATH_add "$alias_dir"
#   echo "#!/usr/bin/env bash -e" > "$target"
#   echo "$@" >> "$target"
#   chmod +x "$target"
# }

## 4. Create local dot file (example: 'touch ./.envrc.local')

## More details:
#  - https://direnv.net/
#  - https://direnv.net/man/direnv-stdlib.1.html
#  - https://github.com/direnv/direnv/
